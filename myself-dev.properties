##服务端口号
server:
   port: 8083

spring:
   ##服务名称
   application:
      name: myself
   ##数据库配置
   datasource:
      url: jdbc:mysql://127.0.0.1:3306/eas_user_dev?useSSL=false&useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedStatements=true
      username: root
      password: 123456
      driver-class-name: com.mysql.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource
      ##下面为连接池的补充设置，应用到上面所有数据源中
      ##初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      ##配置获取连接等待超时的时间
      maxWait: 60000
      ##配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      ##配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      ##打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      druid:
         filter:
            commons-log:
               connection-logger-name: stat,wall,log4j
      ##通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
   ##REDIS (RedisProperties)
   redis:
      ##Redis数据库索引（默认为0)
      database:
      ##Redis服务器地址
      host:
      ##Redis服务器连接端口
      port:
      ##Redis服务器连接密码（默认为空）
      password:
      pool:
         ##连接池最大连接数（使用负值表示没有限制）
         max-active: 20
         ##连接池最大阻塞等待时间（使用负值表示没有限制）
         max-wait: 60000
         ##连接池中的最大空闲连接
         max-idle: 20
         ##连接池中的最小空闲连接
         min-idle: 1
      ##连接超时时间（毫秒）
      timeout: 0
   #RabbitMQ配置信息
   rabbitmq:
      host: 127.0.0.1
      port: 5672
      username: guest
      password: guest
   cloud:
      bus:
         enabled: true
         ## 开启消息跟踪
         trace:
            enabled: true

##pagehelper分页插件配置
pagehelper:
   helperDialect: mysql
   supportMethodsArguments: true
   params: count=countSql
   ##因为超过最大页数后还会返回数据，所以禁止分页参数合理化
   reasonable: false

#重点：在spring boot 2.0版本中一定要修改此配置，可以选择【"health","mappings","bus-refresh"】三种选项暴露那些端点，
management:
   endpoints:
      web:
         exposure:
            include: *
      health:
         show-details: ALWAYS

##服务注册中心
eureka:
   client:
      service-url:
         defaultZone: http://127.0.0.1:8080/eureka/

##feign远程调用配置,开启熔断(或者在spring boot启动项加上@EnableHystrix)
feign:
   hystrix:
      enabled: true

##用于禁用Hystrix的超时时间
hystrix:
   command:
      default:
         execution:
            timeout:
               enabled: false

##mybatis配置文件位置
mybatis:
   location: classpath:mybatis/*.xml

##测试数据
foo: Hello Kitty
