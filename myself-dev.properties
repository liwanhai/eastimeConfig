##服务端口号
server.port=8083
##服务名称
spring.application.name=myself

##测试数据
foo=hello kitty

##服务注册中心
eureka.client.service-url.defaultZone = http://127.0.0.1:8080/eureka/

##feign远程调用配置,开启熔断(或者在spring boot启动项加上@EnableHystrix)
feign.hystrix.enabled=true
##用于禁用Hystrix的超时时间
hystrix.command.default.execution.timeout.enabled=false

##mybatis配置文件位置
mybatis.location=classpath:mybatis/*.xml

##数据库配置
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/eas_user_dev?useSSL=false&useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedStatements=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
##下面为连接池的补充设置，应用到上面所有数据源中
##初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
##配置获取连接等待超时的时间
spring.datasource.maxWait=60000
##配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
##配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
##打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filter.commons-log.connection-logger-name=stat,wall,log4j
##通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

##pagehelper分页插件配置
pagehelper.helperDialect=mysql
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
##因为超过最大页数后还会返回数据，所以禁止分页参数合理化
pagehelper.reasonable=false

##REDIS (RedisProperties)
##Redis数据库索引（默认为0)
#spring.redis.database=
##Redis服务器地址
#spring.redis.host=
##Redis服务器连接端口
#spring.redis.port=
##Redis服务器连接密码（默认为空）
#spring.redis.password=
##连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=20
##连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=60000
##连接池中的最大空闲连接
#spring.redis.pool.max-idle=20
##连接池中的最小空闲连接
#spring.redis.pool.min-idle=1
##连接超时时间（毫秒）
#spring.redis.timeout=0

#RabbitMQ配置信息
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.cloud.bus.enabled=true
## 开启消息跟踪
spring.cloud.bus.trace.enabled=true

#重点：在spring boot 2.0版本中一定要修改此配置，可以选择【"health","mappings","bus-refresh"】三种选项暴露那些端点，  
management.endpoints.web.exposure.include=*
